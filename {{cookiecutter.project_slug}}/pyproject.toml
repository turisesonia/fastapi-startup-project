[project]
name = "{{ cookiecutter.project_slug }}"
version = "0.1.0"
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}"
dependencies = [
    "fastapi[standard]>=0.116.2",
    "pendulum>=3.1.0",
    "psycopg[binary,pool]>=3.2.10",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.10.1",
    "python-dotenv>=1.1.1",
    "sqlalchemy>=2.0.43",
    "structlog>=25.4.0",
    "structlog-cloudrun>=0.2.0",
    "typer>=0.17.4",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
    "alembic>=1.16.5",
    "faker>=37.8.0",
    "pytest>=8.4.2",
    "pytest-mock>=3.15.1",
]

[tool.poe.tasks]
dev = "uvicorn app.main:app --reload --reload-include .env"

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output and reporting
addopts = [
    "-v",                 # verbose output
    "--tb=short",         # shorter traceback format
    "--strict-markers",   # treat unknown markers as errors
    "--disable-warnings", # disable warnings
    # "--cov=app",          # uncomment for coverage reporting
    # "--cov-report=term-missing",
    # "--cov-report=html",
]

# Markers for test categorization
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
    "database: marks tests that require database connection",
    "dev: marks tests that require development environment",
]

# Test filtering
filterwarnings = ["ignore::UserWarning", "ignore::DeprecationWarning"]
